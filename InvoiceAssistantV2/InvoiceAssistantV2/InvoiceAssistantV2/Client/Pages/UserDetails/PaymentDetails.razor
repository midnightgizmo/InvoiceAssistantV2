@page "/PaymentDetails/{PaymentMethodId:int}"

@using InvoiceAssistantV2.Client.Models;
@using InvoiceAssistantV2.Client.ViewModels.UserDetails;
@using InvoiceAssistantV2.Shared.Models.Database.User;
@using InvoiceAssistantV2.Client.Components;

@inject NavigationManager NavManager;
@inject ApplicationSharedData SharedData;
@inject HttpClient httpClient;
@inject AppSettings appSettings;


<section class="container">


	<!-- A hidden elment. bin icon that will be referenced further down the page -->
	<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 19.34 19.34"
		 style="width:0; height:auto; display:none;">
		<symbol id="bin-icon-svg" viewBox="0 0 19.34 19.34">
			<defs>
				<style>
					.cls-102 {
						fill: #358ec5;
					}

					.cls-202 {
						fill: none;
						stroke: #026eb4;
						stroke-linejoin: round;
						stroke-width: 0.75px;
					}

					.cls-302 {
						fill: #fff;
					}
				</style>
			</defs>
			<path class="cls-102" d="M9.67.38A9.3,9.3,0,1,1,.38,9.67,9.3,9.3,0,0,1,9.67.38Z" />
			<path class="cls-202" d="M9.67.38A9.3,9.3,0,1,1,.38,9.67,9.3,9.3,0,0,1,9.67.38Z" />
			<polyline class="cls-302" points="5.88 6.42 7.2 6.42 7.2 16 5.88 16 5.88 6.42" />
			<polyline class="cls-302" points="12.39 6.43 13.7 6.43 13.7 16 12.39 16 12.39 6.43" />
			<polyline class="cls-302" points="7.15 14.67 12.47 14.67 12.47 16 7.15 16 7.15 14.67" />
			<polyline class="cls-302" points="7.16 6.42 12.41 6.42 12.41 7.73 7.16 7.73 7.16 6.42" />
			<polyline class="cls-302" points="8.68 7.64 9.35 7.64 9.35 14.7 8.68 14.7 8.68 7.64" />
			<polyline class="cls-302" points="10.33 7.67 11 7.67 11 14.73 10.33 14.73 10.33 7.67" />
			<polyline class="cls-302" points="5.12 4.2 14.64 4.2 14.64 5.63 5.12 5.63 5.12 4.2" />
			<polyline class="cls-302" points="8.76 2.78 11.08 2.78 11.08 3.43 8.76 3.43 8.76 2.78" />
		</symbol>
	</svg>

	<!-- A hidden element. Cross icon that will be referenced further down the page -->
	<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8.03 8.03"
		 style="width:0; height:auto; display:none;">
		<symbol id="cross-icon-svg" viewBox="0 0 8.03 8.03">
			<defs>
				<style>
					.cls-12 {
						fill: currentColor;
					}</style>
			</defs>
			<path class="cls-12" d="M5.25,4,7.08,5.84c.26.26.52.53.79.79a.46.46,0,0,1,0,.69c-.17.17-.35.33-.51.51a.47.47,0,0,1-.76,0L4.1,5.33,4,5.24a.27.27,0,0,1-.07.08L1.41,7.86a.45.45,0,0,1-.7,0L.16,7.31a.44.44,0,0,1,0-.68L2.72,4.08s0-.08,0-.13L.17,1.41a.46.46,0,0,1,0-.72L.71.16a.46.46,0,0,1,.69,0L4,2.72c0,.06.08,0,.12,0C4.93,1.87,5.78,1,6.62.17A.52.52,0,0,1,7.06,0a.49.49,0,0,1,.27.15L7.87.7a.47.47,0,0,1,0,.7L5.62,3.65,5.25,4" />
		</symbol>
	</svg>

	<!-- A hidden elment. Tick icon that will be referenced further down the page -->
	<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 7.15 7.87"
		 style="width:0; height:auto; display:none;">
		<symbol id="tick-icon-svg" viewBox="0 0 7.15 7.87">
			<defs>
				<style>
					.cls-13 {
						fill: currentColor;
					}</style>
			</defs>
			<path class="cls-13" d="M1.38,4l1.46,2A30.61,30.61,0,0,1,4.91,1.85,6.17,6.17,0,0,1,6.82,0l.33,1.65A14.27,14.27,0,0,0,5.63,3.58c-.72,1-1.75,2.66-2.78,4.29A13.42,13.42,0,0,0,1.57,6.42,15.11,15.11,0,0,0,0,5.17L1.38,4" />
		</symbol>
	</svg>
	
	<!-- A hidden elment. Edit icon that will be referenced further down the page -->
	<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12.61 12.6"
		 style="width:0; height:auto; display:none;">
		<symbol id="edit-icon-svg" viewBox="0 0 12.61 12.6">
			<defs>
				<style>
					
					.edit-border-color, .edit-border-color-1 {
						fill:currentColor;
					}
					.edit-bk-grd-color {
						fill: transparent;
					}

					.edit-border-color-1 {
						fill-rule: evenodd;
					}</style>
			</defs>
			<polyline class="edit-border-color" points="0.7 8.97 0 12.6 3.7 11.94 0.7 8.97" />
			<path class="edit-bk-grd-color" d="M1.75,8.59c0-.26.3-.53.58-.81l4.5-4.51c.21-.2.41-.41.61-.42s.39.19.59.38L9.35,4.56c.17.17.34.33.34.5s-.16.32-.33.49l-4.89,4.9c-.2.19-.39.38-.56.39s-.34-.15-.51-.32L2.19,9.32c-.23-.24-.47-.47-.44-.73" />
			<path class="edit-bk-grd-color" d="M8.74,1.6c0-.26.3-.53.58-.81l0,0C9.5.6,9.71.4,9.91.39s.39.19.58.38L11.82,2.1c.16.16.33.33.33.49s-.16.33-.32.49l-.37.38c-.2.19-.39.38-.56.39s-.34-.15-.51-.32L9.18,2.33c-.23-.24-.47-.47-.44-.73" />
			<polyline class="edit-bk-grd-color" points="0.88 9.49 0.34 12.27 3.18 11.76 0.88 9.49" />
			<path class="edit-border-color-1" d="M1.75,8.53c0-.25.3-.53.58-.81l4.5-4.5C7,3,7.24,2.8,7.44,2.8s.4.18.59.38L9.36,4.51c.16.16.33.33.33.49s-.16.33-.32.49l-4.9,4.9c-.19.19-.38.38-.56.39s-.34-.15-.51-.31L2.2,9.26C2,9,1.73,8.79,1.75,8.53m-.55,0c0-.32.38-.67.73-1L6.7,2.72c.26-.25.52-.51.77-.52s.49.23.73.47L9.88,4.35c.21.21.42.42.42.62s-.2.42-.41.62L4.62,10.86c-.24.24-.48.48-.7.5s-.43-.2-.64-.4L1.76,9.44C1.47,9.14,1.17,8.85,1.2,8.52Z" />
			<path class="edit-border-color-1" d="M8.75,1.6c0-.26.3-.54.58-.82l0,0c.21-.2.41-.41.61-.41s.39.18.58.37l1.33,1.33c.17.17.34.34.34.5s-.16.33-.33.49l-.37.37c-.19.19-.38.38-.56.4s-.34-.15-.51-.32L9.2,2.32c-.24-.23-.47-.47-.45-.72m-.37,0c0-.34.4-.71.78-1.08l0,0C9.4.28,9.68,0,9.94,0s.52.25.78.5L12.17,2c.22.22.44.44.44.66s-.21.44-.43.65l-.5.5c-.25.26-.51.51-.74.53s-.46-.21-.68-.43L9,2.58C8.67,2.27,8.35,2,8.38,1.61Z" />
		</symbol>
	</svg>


	
	<!-- background color -->
	<div class="background-wallpaper"></div>





	<header class="page-header">
		<div>
			<div>
				<button @onclick='() => NavManager.NavigateTo("/UserDetails")'>
					<!--<img src="/images/svg/Back-Arrow.svg" />-->
					<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 37.48 37.48">
						<defs>
							<style>
								.cls-1 {
									fill: none;
									stroke: currentColor;
									stroke-linejoin: round;
									stroke-width: 3px;
								}

								.cls-2 {
									fill: currentColor;
								}</style>
						</defs>
						<circle class="cls-1" cx="18.74" cy="18.74" r="17.24" />
						<path class="cls-2" d="M17.77,30.73a3.11,3.11,0,0,0,2.17,0,4.78,4.78,0,0,0,1.68-1.79,2,2,0,0,0,.32-1.21,9.46,9.46,0,0,0,0-1.06,8,8,0,0,0-.2-1L18.32,22H30.09a2.86,2.86,0,0,0,1.39-.69,6.88,6.88,0,0,0,1-1.86l0-2.19a5.72,5.72,0,0,0-1-1.69,3.36,3.36,0,0,0-1.49-.7l-11.74,0,3.46-3.74a3.39,3.39,0,0,0,.16-2.5A6,6,0,0,0,19.76,6.1,1.74,1.74,0,0,0,18,6L6.41,17a3.25,3.25,0,0,0-.35,1.19,3.76,3.76,0,0,0,.29,1.27L17.77,30.73" />
					</svg>
				</button>
			</div>

			<div><span>Payment Information</span></div>

			<div class="usericon-container">
				<img src="/images/svg/User-Icon.svg" />
			</div>

		</div>
	</header>



	@if (ViewModel.CanPageLoad == true)
	{
		<div class="payment-details">
			<EditForm Model="ViewModel.PaymentInfo">

				<fieldset disabled="@(!ViewModel.IsViewModelEditable)">

					<div>
						<div>
							<label for="txtPaymentInfoName">Payment Type</label>
						</div>

						<div>
							@if (ViewModel.PaymentInfo.IsInEditMode == true)
							{
								<input id="txtPaymentInfoName" type="text" @bind="ViewModel.PaymentInfo.Name" autofocus />
							}
							else
							{
								<div class="readonly">
									<span>@ViewModel.PaymentInfo.Name</span>
									<button disabled="@(!ViewModel.IsViewModelEditable)"
									@onclick="ViewModel.PaymentInfo.BeginEdit">
										<!--<img src="/images/svg/Edit-button-wtih-border.svg" alt="Edit Users Details"/>-->
										<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15.77 15.77">
											<defs>
												<style>
													.border {
													fill: transparent;
													stroke: #727475;
													stroke-miterlimit: 10;
													stroke-width: 0;
													}

													.edit-button-2, .edit-button-4 {
													fill: #727475;
													}

													.edit-button-3 {
													fill: #e9e9e9;
													}

													.edit-button-4 {
													fill-rule: evenodd;
													}</style>
											</defs>
											<rect class="border" x="0.13" y="0.13" width="15.52" height="15.52" rx="2.97" />
											<polyline class="edit-button-2" points="2.64 10.42 1.94 14.04 5.64 13.38 2.64 10.42" />
											<path class="edit-button-3" d="M10.68,3c0-.25.3-.53.58-.81l0,0c.2-.21.41-.41.61-.42s.39.19.58.38l1.33,1.33c.17.17.33.33.33.5s-.16.32-.32.48l-.37.38c-.19.19-.38.38-.56.39s-.34-.15-.51-.32l-1.21-1.2c-.23-.24-.46-.47-.44-.73" />
											<polyline class="edit-button-3" points="2.82 10.93 2.28 13.71 5.12 13.21 2.82 10.93" />
											<path class="edit-button-4" d="M3.69,10c0-.26.3-.54.58-.82l4.5-4.5c.21-.21.42-.41.62-.42s.39.18.58.38L11.3,6c.16.16.33.33.33.49s-.16.33-.32.49l-4.9,4.9c-.19.19-.38.38-.56.4s-.34-.16-.51-.32L4.14,10.7c-.24-.23-.47-.47-.45-.72m-.55,0c0-.32.38-.67.73-1L8.64,4.17c.26-.26.52-.52.77-.53s.49.23.74.48l1.67,1.67c.21.21.42.42.42.63s-.2.41-.41.61L6.56,12.3c-.24.24-.48.48-.7.5s-.43-.19-.64-.4L3.7,10.88C3.41,10.58,3.11,10.29,3.14,10Z" />
											<path class="edit-button-4" d="M10.69,3c0-.26.3-.54.58-.81l0,0c.21-.21.41-.41.61-.42s.39.18.58.38l1.33,1.33c.17.16.34.33.34.49s-.16.33-.33.49l-.37.38c-.19.19-.38.38-.56.39s-.34-.15-.51-.32l-1.2-1.2c-.24-.24-.47-.47-.45-.73m-.37,0c0-.35.4-.72.78-1.09l0,0c.27-.27.55-.55.81-.56s.52.25.78.51l1.45,1.44c.22.22.44.44.44.66s-.21.44-.43.66l-.5.49c-.25.26-.51.51-.74.53s-.46-.2-.68-.42L10.92,4C10.61,3.71,10.29,3.4,10.32,3.06Z" />
											<path class="edit-button-3" d="M3.69,10c0-.25.3-.53.58-.81L8.8,4.61c.21-.2.41-.41.61-.41s.39.18.59.37L11.33,5.9c.16.17.33.34.33.5s-.16.33-.32.49l-4.93,5c-.19.19-.38.38-.56.39s-.34-.15-.51-.32l-1.21-1.2c-.23-.24-.46-.47-.44-.73" />
										</svg>
									</button>
								</div>
							}
						</div>
						@if (ViewModel.PaymentInfo.IsInEditMode == true)
						{
							<div></div>
							<div>
								<button @onclick="ViewModel.UpdatePaymentMethodDetails">Update</button>
								<button @onclick="ViewModel.PaymentInfo.CancelEdit">Cancel</button>
							</div>
						}
					</div>
				</fieldset>
			</EditForm>


			<div class="list-of-payments-details-container">
				<header>
					<h2>Payment details</h2>
				</header>
				<div class="new-payment-details-container">
					<div>
						<label for="txtPaymentDetailName">Name</label>
						<input id="txtPaymentDetailName" @bind-value="this.ViewModel.NewPaymentDetailName" />
					</div>
					
					<div>
						<label for="txtPaymentDetailValue">Value</label>
						<input id="txtPaymentDetailValue" @bind-value="this.ViewModel.NewPaymentDetailValue" />
					</div>
					<div>
						<button @onclick="this.ViewModel.AddNewPaymentDetail"
								disabled="@(!ViewModel.IsViewModelEditable)">
							Add
						</button>
					</div>
				</div>
				<div class="table">
					@if (this.ViewModel.PaymentInfo.PaymetDetails != null)
					{
						@foreach (PaymetDetail aPaymentDetail in this.ViewModel.PaymentInfo.PaymetDetails)
						{
							<div class="row">

								<div class="cell edit-container">
									@if (aPaymentDetail.IsInEditMode == true)
									{
										<div>
											<button id="cmdEdit_Cross" @onclick="aPaymentDetail.CancelEdit">
												<svg>
													<use href="#cross-icon-svg" />
												</svg>
											</button>
											<button id="cmdEdit_Tick" @onclick="async () => await this.ViewModel.UpdatePaymentDetails(aPaymentDetail)">
												<svg>
													<use href="#tick-icon-svg"/>
												</svg>
											</button>
											
										</div>
									}
									else
									{
										<div>
											<button id="cmdEdit" @onclick="aPaymentDetail.BeginEdit">
												<svg>
													<use href="#edit-icon-svg"/>
												</svg>
											</button>
										</div>
									}
								</div>
								@if (aPaymentDetail.IsInEditMode)
								{
									<div class="cell">
										<input @bind-value="aPaymentDetail.Key" />
									</div>

									<div class="cell">
										<input @bind-value="aPaymentDetail.Value" />
									</div>
								}
								else
								{
									<div class="cell read-only-text">
										<span>@aPaymentDetail.Key</span>
									</div>

									<div class="cell read-only-text">
										<span>@aPaymentDetail.Value</span>
									</div>
								}

								<div class="cell delete-container">
									<ConfirmDeleteComponent Tag="aPaymentDetail" OnConfirmDelete="(args) => this.ConfirmDeleteComponent_OnConfirmDelete(args)" />
								</div>
							</div>
						}
					}
				</div>
			</div>


		</div>
	}
	else
	{
		<div>Information is missing to display this page. Please go back to previouse page</div>
	}


</section>
@code 
{
	[Parameter]
	public int? PaymentMethodId { get; set; }
	//[Parameter]
	//public PaymentMethod? PaymentInfo { get; set; }

	public PaymentDetailsViewModel ViewModel { get; set; }

	public PaymentDetails()
	{
		ViewModel = new PaymentDetailsViewModel();
	}

	protected async override Task OnParametersSetAsync()
	{
		// if we don't have the information needed to display the page
		if (PaymentMethodId == null || PaymentMethodId < 1)
		{


			// set to null just in case it is set to a value but is the wrong model
			SharedData.PaymentMethodToEdit = null;
			ViewModel.CanPageLoad = false;
		}
		// we might have the information needed (it might require a post request to the server to get more data)
		else
		{
			// if we have the model data for Payment method, add it to the view model so it does not have to
			// get it from the server
			if (SharedData.PaymentMethodToEdit != null)
				// add to the view model the payment method we are editing
				this.ViewModel.PaymentInfo = SharedData.PaymentMethodToEdit;

			// inishazlie the view model so it can be used. If any model data is missing, it will get it from the server
			await this.ViewModel.Inishazlise(this.httpClient, this.appSettings, PaymentMethodId.Value);

		}

	}
	/// <summary>
	/// When the user confirms they want to delete a row, this method will be called
	/// </summary>
	/// <param name="args">Tuple<ConfirmDeleteComponent, PaymetDetail></param>
	public async void ConfirmDeleteComponent_OnConfirmDelete(object args)
	{
		// the passed in object is a Tuple
		Tuple<ConfirmDeleteComponent, object> rowData;
		// the second item in the tuple is set as an object but we know its a PaymetDetail
		PaymetDetail paymentDetail;


		// cast the object to a tuple
		rowData = (Tuple<ConfirmDeleteComponent, object>)args;

		// cast the second item in the tuple to a PaymetDetail object
		paymentDetail = rowData.Item2 as PaymetDetail;


		// disable all buttons on the ConfirmDeleteComponent while we wait back for a response from the server.
		rowData.Item1.ShouldDisableAllButtons = true;

		bool WasScusesfull = await this.ViewModel.DeletePaymentDetail(paymentDetail);

		// if we were sucsefull in deleteing the payment detail, update the UI (remove the row)
		if (WasScusesfull == true)
			this.StateHasChanged();

		// allow buttons to be clicked again if needed.
		rowData.Item1.ShouldDisableAllButtons = false;
	}

	

}
