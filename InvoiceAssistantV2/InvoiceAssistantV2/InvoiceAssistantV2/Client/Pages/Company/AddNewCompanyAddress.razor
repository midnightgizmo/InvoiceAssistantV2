@page "/Company/Address/New/{CompanyDetailsId:int}";
@using InvoiceAssistantV2.Client.Classes.Server
@using InvoiceAssistantV2.Client.Components.Company
@using InvoiceAssistantV2.Client.Models
@using InvoiceAssistantV2.Client.Models.Server.ResponseData
@using InvoiceAssistantV2.Shared.Models.Database.Company

@inject NavigationManager NavManager;
@inject HttpClient httpClient;
@inject AppSettings appSettings;
<section>

	<header class="page-header">
		<div>
			<div>
				<button @onclick='() => NavManager.NavigateTo("/Company")'>
					<!--<img src="/images/svg/Back-Arrow.svg" />-->
					<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 37.48 37.48">
						<defs>
							<style>
								.cls-1 {
									fill: none;
									stroke: currentColor;
									stroke-linejoin: round;
									stroke-width: 3px;
								}

								.cls-2 {
									fill: currentColor;
								}</style>
						</defs>
						<circle class="cls-1" cx="18.74" cy="18.74" r="17.24" />
						<path class="cls-2" d="M17.77,30.73a3.11,3.11,0,0,0,2.17,0,4.78,4.78,0,0,0,1.68-1.79,2,2,0,0,0,.32-1.21,9.46,9.46,0,0,0,0-1.06,8,8,0,0,0-.2-1L18.32,22H30.09a2.86,2.86,0,0,0,1.39-.69,6.88,6.88,0,0,0,1-1.86l0-2.19a5.72,5.72,0,0,0-1-1.69,3.36,3.36,0,0,0-1.49-.7l-11.74,0,3.46-3.74a3.39,3.39,0,0,0,.16-2.5A6,6,0,0,0,19.76,6.1,1.74,1.74,0,0,0,18,6L6.41,17a3.25,3.25,0,0,0-.35,1.19,3.76,3.76,0,0,0,.29,1.27L17.77,30.73" />
					</svg>
				</button>
			</div>

			<div><span>Add Invoice Address</span></div>

			<div class="glasses-container">
				<img src="/images/svg/House.svg" />
			</div>

		</div>
	</header>


	<!-- background color -->
	<div class="background-wallpaper"></div>


	<div class="address-details-container">
		<CompanyAddressComponent @ref="companyAddressComponent" />
	</div>

	<div class="confirm-add-container">
		<div>
			<button @onclick="() => cmdTick_OnClick()">
				<svg id="tick-icon" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 7.15 7.87">
					<defs>
						<style>
							.cls-3 {
								fill: currentColor;
							}</style>
					</defs>
					<path class="cls-3" d="M1.38,4l1.46,2A30.61,30.61,0,0,1,4.91,1.85,6.17,6.17,0,0,1,6.82,0l.33,1.65A14.27,14.27,0,0,0,5.63,3.58c-.72,1-1.75,2.66-2.78,4.29A13.42,13.42,0,0,0,1.57,6.42,15.11,15.11,0,0,0,0,5.17L1.38,4" />
				</svg>
			</button>
		</div>
		<div>
			<button @onclick='() => NavManager.NavigateTo("/Company")'>
				<svg id="cross-icon" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8.03 8.03">
					<defs>
						<style>
							.cls-2 {
								fill: currentColor;
							}</style>
					</defs>
					<path class="cls-2" d="M5.25,4,7.08,5.84c.26.26.52.53.79.79a.46.46,0,0,1,0,.69c-.17.17-.35.33-.51.51a.47.47,0,0,1-.76,0L4.1,5.33,4,5.24a.27.27,0,0,1-.07.08L1.41,7.86a.45.45,0,0,1-.7,0L.16,7.31a.44.44,0,0,1,0-.68L2.72,4.08s0-.08,0-.13L.17,1.41a.46.46,0,0,1,0-.72L.71.16a.46.46,0,0,1,.69,0L4,2.72c0,.06.08,0,.12,0C4.93,1.87,5.78,1,6.62.17A.52.52,0,0,1,7.06,0a.49.49,0,0,1,.27.15L7.87.7a.47.47,0,0,1,0,.7L5.62,3.65,5.25,4" />
				</svg>
			</button>
		</div>
	</div>
</section>

@code {

	private CompanyAddressComponent companyAddressComponent { get; set; }
	[Parameter]
	public int CompanyDetailsId { get; set; }

	protected override void OnParametersSet()
	{
		if (this.CompanyDetailsId <= 0)
			NavManager.NavigateTo("/Company");
	}

	private bool HasTickButtonBeenClicked = false;
	public async void cmdTick_OnClick()
	{
		// what we will store the new compnay address in
		CompanyAddress companyAddress = null;

		// If the user clicks the tick button multiple times
		if (this.HasTickButtonBeenClicked == true)
			return;

		// check there is a CompanyAddress object, that will hold the new company address we want to create
		if (this.companyAddressComponent.companyAddress == null)
			return;

		companyAddress = this.companyAddressComponent.companyAddress;

		// check for errors on the inputs
		bool AreThereErrors = false;


		if (companyAddress.FriendlyName.Trim().Length == 0)
		{

			AreThereErrors = true;
		}

		if (AreThereErrors == true)
		{
			// allows this function to run again if user clicks the tick button again
			this.HasTickButtonBeenClicked = false;
			return;
		}

		// set the company details id to the company address
		// (this is the parameter we were passed from the Company Details id we navigated from)
		companyAddress.CompanyDetailsID = this.CompanyDetailsId;

		// if we get this far we have valid inputs to update.
		CompanyAddressCommunication server = new CompanyAddressCommunication(httpClient, appSettings);
		ServerResponseSingleCompanyAddress response;
		response = await server.AddNewCompanyAddress(companyAddress);

		// if we recieved some errors from the server
		if (response.HasErrors == true)
		{
			// allows this function to run again if user clicks the tick button again
			this.HasTickButtonBeenClicked = false;
			return;
		}
		else
		{
			NavManager.NavigateTo("/Company");
		}
	}
}
